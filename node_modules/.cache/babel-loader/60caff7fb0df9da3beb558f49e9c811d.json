{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u7AF9\\u5185 \\u5553\\u4EBA\\\\Documents\\\\git\\\\myFirstReactApp\\\\src\\\\App2.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint react-hooks/exhaustive-deps: off*/\nimport React, { useEffect, useState } from \"react\";\nimport GoogleMapReact, { Marker } from 'google-map-react'; // import {ColorfulMessage} from \"./components/ColorfulMessage\"; \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const App2 = () => {\n  _s();\n\n  const [num, setNum] = useState(0); //numは変数、setNumは更新関数\n\n  const [ahoahoShowFlag, setAhoahoShowFrag] = useState(false);\n  const [map, setMap] = useState(null);\n  const [maps, setMaps] = useState(null);\n  const [marker, setMarker] = useState(null);\n  const [center, setCenter] = useState({\n    lat: \"\",\n    lng: \"\"\n  });\n  const [currentPosition, setCurrentPosition] = useState();\n\n  const onClickButton = () => {\n    setNum(num + 1);\n  };\n\n  const onClickSwithShowFlag = () => {\n    setAhoahoShowFrag(!ahoahoShowFlag);\n  };\n\n  useEffect(() => {\n    if (num > 0) {\n      if (num % 3 === 0) {\n        ahoahoShowFlag || setAhoahoShowFrag(true);\n      } else {\n        ahoahoShowFlag && setAhoahoShowFrag(false);\n      }\n    }\n  }, [num]); //第二引数に与えた関数に関心を持つ関数となる。\n  // 初期表示地点\n\n  const success = data => {\n    const currentPosition = {\n      lat: data.coords.latitude,\n      lng: data.coords.longitude\n    };\n    setCurrentPosition(currentPosition);\n    setCenter(currentPosition);\n  }; //geolocation使えない場合の値を返す\n\n\n  const error = data => {\n    const currentPosition = {\n      lat: 34.673542,\n      lng: 135.433338\n    };\n    setCurrentPosition(currentPosition);\n    setCenter(currentPosition);\n    alert(\"現在地を読み取れませんでした\");\n  }; //初期読み込み時のみgeolocationを動かす\n\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(success, error);\n  }, []); // map, maps で受け取ると変数が被るので object で受け取っています\n\n  const handleApiLoaded = object => {\n    setMap(object.map);\n    setMaps(object.maps);\n  };\n\n  const setLatLng = ({\n    lat,\n    lng\n  }) => {\n    if (marker) {\n      marker.setMap(null);\n    }\n\n    const latLng = {\n      lat,\n      lng\n    };\n    setMarker(new maps.Marker({\n      map,\n      position: latLng\n    })); // map.panTo(latLng);クリック地点をセンターにする\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: \"black\"\n      },\n      children: \"Hello World\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-area\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n        children: [\"// bootstrapURLKeys=\", {\n          key: process.env.NEXT_PUBLIC_GOOGLE_MAP_KEY\n        }, \"defaultCenter=\", center, \"defaultZoom=\", 16, \"onClick=\", setLatLng, \"onGoogleApiLoaded=\", handleApiLoaded, /*#__PURE__*/_jsxDEV(Marker, {\n          lat: currentPosition.lat,\n          lng: currentPosition.lng\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClickButton,\n      children: \"\\u30AB\\u30A6\\u30F3\\u30C8\\u30A2\\u30C3\\u30D7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClickSwithShowFlag,\n      children: \"on/off\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: num\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), ahoahoShowFlag && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u3042\\u307B\\u3042\\u307B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u3042\\u307B\\u3042\\u307B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App2, \"TOB0QnrhHoGG+L1Y2Squp7kPS6Q=\");\n\n_c = App2;\n\nvar _c;\n\n$RefreshReg$(_c, \"App2\");","map":{"version":3,"sources":["C:/Users/竹内 啓人/Documents/git/myFirstReactApp/src/App2.jsx"],"names":["React","useEffect","useState","GoogleMapReact","Marker","App2","num","setNum","ahoahoShowFlag","setAhoahoShowFrag","map","setMap","maps","setMaps","marker","setMarker","center","setCenter","lat","lng","currentPosition","setCurrentPosition","onClickButton","onClickSwithShowFlag","success","data","coords","latitude","longitude","error","alert","navigator","geolocation","getCurrentPosition","handleApiLoaded","object","setLatLng","latLng","position","color","key","process","env","NEXT_PUBLIC_GOOGLE_MAP_KEY"],"mappings":"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","sourcesContent":["/* eslint react-hooks/exhaustive-deps: off*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport GoogleMapReact, {Marker}from 'google-map-react';\r\n\r\n// import {ColorfulMessage} from \"./components/ColorfulMessage\"; \r\n\r\nexport const App2 = () => {\r\n\r\n  const [num, setNum] = useState(0); //numは変数、setNumは更新関数\r\n  const [ahoahoShowFlag, setAhoahoShowFrag] = useState(false);\r\n  const [map, setMap] = useState(null);\r\n  const [maps, setMaps] = useState(null);\r\n  const [marker, setMarker] = useState(null);\r\n  const [center, setCenter] = useState({ lat: \"\", lng: \"\" });\r\n  const [currentPosition, setCurrentPosition] = useState();\r\n\r\n  const onClickButton = () => {\r\n    setNum(num + 1);\r\n  };\r\n\r\n  const onClickSwithShowFlag = () => {\r\n    setAhoahoShowFrag(!ahoahoShowFlag);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (num > 0) {\r\n      if (num % 3 === 0) {\r\n        ahoahoShowFlag || setAhoahoShowFrag(true);\r\n      } else {\r\n        ahoahoShowFlag && setAhoahoShowFrag(false);\r\n      }\r\n    }\r\n  }, [num]);//第二引数に与えた関数に関心を持つ関数となる。\r\n\r\n\r\n    // 初期表示地点\r\n    const success = data => {\r\n      const currentPosition = {\r\n        lat: data.coords.latitude,\r\n        lng: data.coords.longitude\r\n      };\r\n      setCurrentPosition(currentPosition);\r\n      setCenter(currentPosition);\r\n    };\r\n  \r\n    //geolocation使えない場合の値を返す\r\n    const error = data => {\r\n      const currentPosition = {\r\n        lat: 34.673542,\r\n        lng: 135.433338\r\n      };\r\n      setCurrentPosition(currentPosition);\r\n      setCenter(currentPosition);\r\n      alert(\"現在地を読み取れませんでした\")\r\n    };\r\n  　//初期読み込み時のみgeolocationを動かす\r\n    useEffect(() => {\r\n      navigator.geolocation.getCurrentPosition(success, error);\r\n    }, []);\r\n\r\n\r\n  // map, maps で受け取ると変数が被るので object で受け取っています\r\n  const handleApiLoaded = (object) => {\r\n    setMap(object.map);\r\n    setMaps(object.maps);\r\n  };\r\n\r\n  const setLatLng = ({lat, lng}) => {\r\n    if (marker) {\r\n      marker.setMap(null);\r\n    }\r\n    const latLng = {\r\n      lat,\r\n      lng,\r\n    };\r\n    setMarker(new maps.Marker({map,position: latLng,}));\r\n    // map.panTo(latLng);クリック地点をセンターにする\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 style={{ color: \"black\" }}>Hello World</h1>\r\n      <div className=\"map-area\">\r\n        <GoogleMapReact>\r\n          // bootstrapURLKeys={{ key: process.env.NEXT_PUBLIC_GOOGLE_MAP_KEY }}\r\n          defaultCenter={center}\r\n          defaultZoom={16}\r\n          onClick={setLatLng}\r\n          onGoogleApiLoaded={handleApiLoaded}\r\n          <Marker\r\n            lat={currentPosition.lat}\r\n            lng={currentPosition.lng}\r\n          />\r\n        </GoogleMapReact>\r\n      </div>\r\n      {/* <ColorfulMessage color=\"black\"> お元気ですよね?</ColorfulMessage>  */}\r\n      {/* <ColorfulMessage color=\"pink\"> 元気です</ColorfulMessage> */}\r\n      <button onClick={onClickButton}>カウントアップ</button>\r\n      <button onClick={onClickSwithShowFlag}>on/off</button>\r\n      <p>{num}</p>\r\n      {ahoahoShowFlag && <p>あほあほ</p>}\r\n      <p>あほあほ</p>\r\n\r\n    </>\r\n  )\r\n\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}